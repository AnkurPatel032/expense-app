[{"D:\\NJ Projects\\expense-app\\src\\index.js":"1","D:\\NJ Projects\\expense-app\\src\\pages\\AddExpensePage\\AddExpensePage.jsx":"2","D:\\NJ Projects\\expense-app\\src\\components\\InputBox\\InputBox.component.jsx":"3","D:\\NJ Projects\\expense-app\\src\\components\\ActionButton\\ActionButton.component.jsx":"4","D:\\NJ Projects\\expense-app\\src\\pages\\DashbordPage\\DashboardPage.jsx":"5","D:\\NJ Projects\\expense-app\\src\\store\\configureStore.js":"6","D:\\NJ Projects\\expense-app\\src\\reducers\\expensesReducer.js":"7","D:\\NJ Projects\\expense-app\\src\\actions\\addExpense.js":"8","D:\\NJ Projects\\expense-app\\src\\router\\AppRouter.js":"9","D:\\NJ Projects\\expense-app\\src\\components\\Header\\Header.component.jsx":"10","D:\\NJ Projects\\expense-app\\src\\reducers\\filterReducer.js":"11","D:\\NJ Projects\\expense-app\\src\\components\\Error\\Error.component.jsx":"12","D:\\NJ Projects\\expense-app\\src\\pages\\EditExpensePage\\EditExpensePage.js":"13","D:\\NJ Projects\\expense-app\\src\\actions\\getExpense.js":"14","D:\\NJ Projects\\expense-app\\src\\actions\\deleteExpense.js":"15"},{"size":1249,"mtime":1611559386341,"results":"16","hashOfConfig":"17"},{"size":3591,"mtime":1612791342761,"results":"18","hashOfConfig":"17"},{"size":401,"mtime":1611567380641,"results":"19","hashOfConfig":"17"},{"size":326,"mtime":1611305986738,"results":"20","hashOfConfig":"17"},{"size":3360,"mtime":1612789724659,"results":"21","hashOfConfig":"17"},{"size":405,"mtime":1611167737041,"results":"22","hashOfConfig":"17"},{"size":1023,"mtime":1612325437432,"results":"23","hashOfConfig":"17"},{"size":250,"mtime":1611142523869,"results":"24","hashOfConfig":"17"},{"size":1198,"mtime":1611757617469,"results":"25","hashOfConfig":"17"},{"size":1428,"mtime":1611574095037,"results":"26","hashOfConfig":"17"},{"size":377,"mtime":1611229067077,"results":"27","hashOfConfig":"17"},{"size":156,"mtime":1611304368394,"results":"28","hashOfConfig":"17"},{"size":2956,"mtime":1611990212772,"results":"29","hashOfConfig":"17"},{"size":131,"mtime":1611743132489,"results":"30","hashOfConfig":"17"},{"size":137,"mtime":1611755000048,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1p5w3bh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\NJ Projects\\expense-app\\src\\index.js",[],["67","68"],"D:\\NJ Projects\\expense-app\\src\\pages\\AddExpensePage\\AddExpensePage.jsx",["69","70"],"import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport ActionButton from \"../../components/ActionButton/ActionButton.component\";\r\nimport InputBox from \"../../components/InputBox/InputBox.component\";\r\nimport {addExpense} from \"../../actions/addExpense\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { moment } from \"moment\";\r\n\r\n//React 16.8.0\r\nclass  AddExpensePage extends React.Component{\r\n\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      \"description\":'',\r\n      \"amount\":'',\r\n      \"date\":''\r\n    }\r\n    // this.handleChange = this.handleChange.bind(this);\r\n  }\r\n   \r\n  // handleChange(date) {\r\n  \r\n  //  var d=date;\r\n  //  console.log(\"Select date:\"+d);\r\n  //  var curr_date = d.getDate();\r\n  //  var curr_month = d.getMonth() + 1; //Months are zero based\r\n  //  var curr_year = d.getFullYear();\r\n  //  var myDate=curr_date + \"-\" + curr_month + \"-\" + curr_year;\r\n  //  console.log(\"Converted Date:\"+myDate);\r\n\r\n  //   this.setState({\r\n  //     \"date\": myDate\r\n  //   })\r\n  // }\r\n\r\n\r\n  onTextChange=(event)=>{\r\n    this.setState({\r\n           [event.target.name]:event.target.value\r\n    })\r\n  }\r\n \r\n \r\n\r\n  onActionButtonClick=(event)=>{\r\n  \r\n    let payload={\r\n            newExpense:{\r\n              id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\r\n              description:this.state.description,\r\n              amount:this.state.amount,\r\n              date:this.state.date\r\n             \r\n            }\r\n           \r\n    }\r\n    this.props.dispatch(addExpense(payload)); \r\n    event.preventDefault();\r\n    this.props.history.push(\"/\");\r\n  } \r\n  \r\n   convertDate(inputFormat) {\r\n    function pad(s) { return (s < 10) ? '0' + s : s; }\r\n    var d = new Date(inputFormat)\r\n    return [pad(d.getDate()), pad(d.getMonth()+1), d.getFullYear()].join('/')\r\n  }\r\n  \r\n    \r\n  render(){\r\n  \r\n\r\n    return (\r\n\r\n        <div className=\"col-md-12 ms-md-auto\">\r\n          <form class=\"row g-3\">\r\n          <div class=\"col-md-12\">\r\n            <label className=\"form-label\">Description:</label>\r\n            <InputBox idText=\"description\" changeHandler={this.onTextChange} textValue={this.state.description} typeValue=\"text\" placeholder=\"Enter description\"/>\r\n           \r\n           </div>\r\n           <div class=\"col-md-12\">\r\n            <label className=\"form-label\">Amount:</label>\r\n            <InputBox idText=\"amount\" changeHandler={this.onTextChange} textValue={this.state.amount} typeValue=\"text\" placeholder=\"Enter amount\"/>\r\n           </div>\r\n           <div class=\"col-md-12\">\r\n            <label className=\"form-label\">Date:</label>\r\n           <input name=\"date\" type=\"hidden\" value={this.state.date} />\r\n         \r\n           <DatePicker\r\n             selected={this.state.date}\r\n             dateFormat=\"dd/MM/yyyy\"\r\n             onChange={(value)=> {\r\n          //   let cDate=this.convertDate(value); \r\n      //    var event = new Date(value);\r\n       //  let cdate = JSON.stringify(event)\r\n         //    cdate = cdate.slice(1,11)\r\n         var today  = new Date(value.toLocaleDateString(\"en-US\"));\r\n              console.log(\"today:\"+today) ;\r\n                 this.setState({date: today})\r\n                }}\r\n            />\r\n              </div>    \r\n            <ActionButton clickHandler={this.onActionButtonClick} buttonText=\"Add Expense\"/>\r\n            \r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default connect((state) => {\r\n  return {\r\n      count: state.expenses.length,\r\n      expense: state.expenses\r\n  }\r\n}) (AddExpensePage);","D:\\NJ Projects\\expense-app\\src\\components\\InputBox\\InputBox.component.jsx",[],"D:\\NJ Projects\\expense-app\\src\\components\\ActionButton\\ActionButton.component.jsx",[],"D:\\NJ Projects\\expense-app\\src\\pages\\DashbordPage\\DashboardPage.jsx",["71","72"],"import React, { useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport InputBox from \"../../components/InputBox/InputBox.component\";\r\nimport \"../../pages/DashbordPage/Dashboard.style.css\";\r\nimport \"../../actions/deleteExpense\";\r\nimport { deleteExpense } from \"../../actions/deleteExpense\";\r\nimport { moment } from \"moment\";\r\n\r\nconst DashboardPage = (props) => {\r\n\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeHandler = (event) => {\r\n        setSearchText(event.target.value);\r\n    }\r\n\r\n    const deleteEmployee=(id)=>{\r\n      \r\n        if (window.confirm(\"Are you sure?\")) {\r\n            let payload = {\r\n                newExpense: {\r\n                  id: id\r\n                }\r\n              }\r\n            dispatch(deleteExpense(payload));\r\n          }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Total expense is: {props.count}</h2>\r\n            <InputBox idText=\"description\" changeHandler={onChangeHandler} typeValue=\"text\" placeholder=\"Search by description\" />\r\n           \r\n            <div className=\"row-md-12\">\r\n                <table className=\"table table-responsive\">\r\n                    <thead className=\"table-light\">\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Amount</th>\r\n                        <th scope=\"col\" >Date</th>\r\n                        <th scope=\"col\" colSpan=\"2\">Actions</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.expense.filter(expense => {\r\n                            if (searchText === \"\") { return expense; }\r\n                            else if (expense.description.toLowerCase().includes(searchText.toLocaleLowerCase())) {\r\n                                return expense;\r\n                            }\r\n                        }).map((expense,index) =>\r\n                           \r\n                            <tr>\r\n                                <th scope=\"row\">{index+1}</th>\r\n                                <td>{expense.description}</td>\r\n                                <td>{expense.amount}</td>\r\n                                <td>{expense.date.toString()}</td>\r\n                                <td><Link className=\"btn btn-primary\" to={`/edit/${expense.id}`}>Edit</Link></td>\r\n                                <td> <button className=\"btn btn-danger\"  type=\"button\" onClick={deleteEmployee.bind(this,`${expense.id}`)}>Delete</button></td>\r\n                            </tr>\r\n                        )}</tbody>\r\n                </table> </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n//connect() is closure\r\n//connect() is function that return HOC\r\n//function it takes component as a parameter  and return component (HOC)\r\nexport default connect((state) => {\r\n    return {\r\n        count: state.expenses.length,\r\n        expense: state.expenses\r\n    }\r\n})(DashboardPage);\r\n\r\n\r\n/*\r\nclosure function\r\n\r\nfunction add(number)\r\n{\r\n    return functon(number2)\r\n    {\r\n        return number * number2;\r\n    }\r\n}\r\n\r\n//technique 1\r\nlet addInnerFunc=add(3); // 3+number2\r\nlet addInnerFunc2=add(18); //18+number2\r\n\r\naddInnerFunc(5);// 8\r\naddInnerFunc2(15);//33\r\n\r\n//technique 2\r\nadd(3)(5);\r\nadd(18)(15);\r\n\r\n*/\r\n\r\n\r\n","D:\\NJ Projects\\expense-app\\src\\store\\configureStore.js",[],"D:\\NJ Projects\\expense-app\\src\\reducers\\expensesReducer.js",["73","74"],"const dummyValues=[\r\n    {   \"id\":1,\r\n        \"description\":\"Macbook pro\",\r\n        \"amount\":142000,\r\n        \"date\":\"15/01/2021\"\r\n    },\r\n    {   \"id\":2,\r\n        \"description\":\"iphon 12\",\r\n        \"amount\":147780,\r\n        \"date\":\"25/01/2021\"\r\n    }\r\n];\r\n\r\nexport const expenseReducer=(state=dummyValues,action)=>{\r\n    switch(action.type){\r\n\r\n       \r\n        case 'ADD_EXPENSE':\r\n           return[...state,action.newExpense]\r\n       \r\n        case 'GET_EXPENSE':\r\n            let new_array = state.map(element => element.id == action.newExpense.id ? {\r\n           ...element,   id:action.newExpense.id, description:action.newExpense.description, amount:action.newExpense.amount,\r\n           date:action.newExpense.date} : element);\r\n              return new_array;\r\n        \r\n        case 'DELETE_EXPENSE': \r\n            let data = state.filter((element) => element.id != action.newExpense.id ? {...element}: \"\")\r\n            return [...data]\r\n        \r\n         \r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\NJ Projects\\expense-app\\src\\actions\\addExpense.js",[],"D:\\NJ Projects\\expense-app\\src\\router\\AppRouter.js",[],"D:\\NJ Projects\\expense-app\\src\\components\\Header\\Header.component.jsx",[],"D:\\NJ Projects\\expense-app\\src\\reducers\\filterReducer.js",[],"D:\\NJ Projects\\expense-app\\src\\components\\Error\\Error.component.jsx",[],"D:\\NJ Projects\\expense-app\\src\\pages\\EditExpensePage\\EditExpensePage.js",["75","76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport ActionButton from \"../../components/ActionButton/ActionButton.component\";\r\nimport InputBox from \"../../components/InputBox/InputBox.component\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getExpense } from \"../../actions/getExpense\";\r\n\r\nconst EditExpensePage = (props) => {\r\n\r\n\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [Id, setId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"Use effect calling..\")\r\n    loadExpenseData();\r\n  }, [])\r\n\r\n\r\n\r\n  const loadExpenseData = () => {\r\n\r\n    const result = props.result.filter(c => { if (c.id == id) { return c; } });\r\n    // console.log(\"filter data:\"+JSON.stringify(result));\r\n    //  dispatch(getExpense(id));\r\n    setDescription(result[0].description);\r\n    setAmount(result[0].amount);\r\n    setDate(result[0].date);\r\n    setId(result[0].id)\r\n\r\n  }\r\n\r\n  // const {description,amount,date}=state;\r\n\r\n  const onTextChange = (e) => {\r\n    console.log([e.target.name] + \":\" + e.target.value);\r\n    if(e.target.name===\"description\"){ setDescription(e.target.value);}\r\n    if(e.target.name===\"amount\"){setAmount(e.target.value);}\r\n    if(e.target.name===\"date\"){setDate( e.target.value);}\r\n    //     setState({...state,[e.target.name]:e.target.value });     \r\n\r\n  }\r\n  const onActionButtonClick = (e) => {\r\n\r\n    let payload = {\r\n      newExpense: {\r\n        id: Id,\r\n        description: description,\r\n        amount: amount,\r\n        date: date\r\n\r\n      }\r\n    }\r\n   dispatch(getExpense(payload));\r\n   e.preventDefault();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12 ms-md-auto\">\r\n      <form class=\"row g-3\">\r\n        <div class=\"col-md-12\">\r\n          <label className=\"form-label\">Description:</label>\r\n          <InputBox idText=\"description\" changeHandler={(e) => { onTextChange(e) }} textValue={description} typeValue=\"text\" placeholder=\"Enter description\" />\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <label className=\"form-label\">Amount:</label>\r\n          <InputBox idText=\"amount\" changeHandler={(e) => { onTextChange(e) }} textValue={amount} typeValue=\"text\" placeholder=\"Enter amount\" />\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <label className=\"form-label\">Date:</label>\r\n          <InputBox idText=\"date\" changeHandler={(e) => { onTextChange(e) }} textValue={date} typeValue=\"text\" placeholder=\"Enter date\" />\r\n        </div>\r\n\r\n        <ActionButton clickHandler={(e) => { onActionButtonClick(e) }} buttonText=\"Update Expense\" />\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    result: state.expenses\r\n  }\r\n})(EditExpensePage);","D:\\NJ Projects\\expense-app\\src\\actions\\getExpense.js",[],"D:\\NJ Projects\\expense-app\\src\\actions\\deleteExpense.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"86","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":8,"column":10,"nodeType":"84","messageId":"85","endLine":8,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":48,"column":55,"nodeType":"89","messageId":"90","endLine":48,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":22,"column":61,"nodeType":"93","messageId":"94","endLine":22,"endColumn":63},{"ruleId":"91","severity":1,"message":"95","line":28,"column":61,"nodeType":"93","messageId":"94","endLine":28,"endColumn":63},{"ruleId":"96","severity":1,"message":"97","line":25,"column":6,"nodeType":"98","endLine":25,"endColumn":8,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"88","line":31,"column":42,"nodeType":"89","messageId":"90","endLine":31,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":31,"column":56,"nodeType":"93","messageId":"94","endLine":31,"endColumn":58},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadExpenseData'. Either include it or remove the dependency array.","ArrayExpression",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [loadExpenseData]",{"range":"105","text":"106"},[790,792],"[loadExpenseData]"]